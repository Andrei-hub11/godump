name: Compatibility Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run weekly on Sundays at 3 AM UTC
    - cron: "0 3 * * 0"

jobs:
  go-compatibility:
    name: Go ${{ matrix.go-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: ["1.21", "1.22", "1.23", "1.24"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Run tests
        run: go test ./... -v -race
        timeout-minutes: 8

  security:
    name: Security Check
    runs-on: ubuntu-latest
    timeout-minutes: 8

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Check go.mod is tidy
        run: |
          go mod tidy
          git diff --exit-code go.mod go.sum
        timeout-minutes: 2

      - name: Check for vulnerabilities
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...
        timeout-minutes: 5

      - name: Test without test dependencies
        run: |
          go mod edit -droprequire=github.com/stretchr/testify
          go mod tidy
          go build -v ./...
          git checkout go.mod go.sum
        timeout-minutes: 3
